/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.salesPerson;

import business.Customer;
import business.CustomerDirectory;
import business.Order;
import business.OrderItem;
import business.Product;
import business.ProductCatalog;
import business.SalesPerson;
import business.SalesPersonDirectory;
import business.Supplier;
import business.SupplierDirectory;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neha Ghate
 */
public class BusinessPanel extends javax.swing.JPanel {

    /**
     * Creates new form BusinessPanel
     */
    
   private JPanel userProcessContainer;
   private SalesPersonDirectory salesPersonDirectory;
   private SupplierDirectory supplierDirectory;
   private CustomerDirectory customerDirectory;
    
    public BusinessPanel(JPanel userProcessContainer,SalesPersonDirectory salesPersonDirectory,
            SupplierDirectory supplierDirectory, CustomerDirectory customerDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.salesPersonDirectory = salesPersonDirectory;
        this.supplierDirectory = supplierDirectory;
        this.customerDirectory = customerDirectory;
        
        populteSalesPerson();
    }

    public void populteSalesPerson(){
        salesPersonComboBox.removeAllItems();
        
        for(SalesPerson s : salesPersonDirectory.getSalesPersonList()){
            salesPersonComboBox.addItem(s);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        top3SalesButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesPersonTable = new javax.swing.JTable();
        getPopularProductButton = new javax.swing.JButton();
        popularProductJTextField = new javax.swing.JTextField();
        salesVolumeJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        getProductsBelowTargetBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesPersonBelowTargeTable = new javax.swing.JTable();
        getProductsAboveTargetBtn1 = new javax.swing.JButton();
        getPopularProductButton1 = new javax.swing.JButton();
        popularCustomerTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        salesCustomerJTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        salesPersonComboBox = new javax.swing.JComboBox();
        calcCommissionBtn = new javax.swing.JButton();
        commissionTextField = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Simplified Arabic Fixed", 3, 14)); // NOI18N
        jLabel1.setText("B.I.");

        top3SalesButton.setText("get top 3 salesPerson");
        top3SalesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top3SalesButtonActionPerformed(evt);
            }
        });

        salesPersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "SalesPerson Name", "Total Sales Volume"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(salesPersonTable);

        getPopularProductButton.setText("get popular product");
        getPopularProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getPopularProductButtonActionPerformed(evt);
            }
        });

        popularProductJTextField.setEditable(false);

        salesVolumeJTextField.setEditable(false);

        jLabel2.setText("Total sales Volume:");

        getProductsBelowTargetBtn.setText("products below target");
        getProductsBelowTargetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getProductsBelowTargetBtnActionPerformed(evt);
            }
        });

        salesPersonBelowTargeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "SalesPerson Name", "Total Products below target", "Total Products Above Targetl"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(salesPersonBelowTargeTable);

        getProductsAboveTargetBtn1.setText("products above target");
        getProductsAboveTargetBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getProductsAboveTargetBtn1ActionPerformed(evt);
            }
        });

        getPopularProductButton1.setText("get popular customer");
        getPopularProductButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getPopularProductButton1ActionPerformed(evt);
            }
        });

        popularCustomerTextField1.setEditable(false);

        jLabel3.setText("Total sales Volume:(in Dollars)");

        salesCustomerJTextField1.setEditable(false);

        jLabel4.setText("For commission paid :");

        salesPersonComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        calcCommissionBtn.setText("Calculate Comission");
        calcCommissionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcCommissionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(top3SalesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(getPopularProductButton)
                            .addComponent(getProductsBelowTargetBtn)
                            .addComponent(getProductsAboveTargetBtn1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(popularProductJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(salesVolumeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(getPopularProductButton1)
                        .addGap(41, 41, 41)
                        .addComponent(popularCustomerTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(salesCustomerJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(salesPersonComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(calcCommissionBtn)
                        .addGap(26, 26, 26)
                        .addComponent(commissionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel1)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(top3SalesButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getPopularProductButton)
                    .addComponent(popularProductJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salesVolumeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(getProductsBelowTargetBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(getProductsAboveTargetBtn1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getPopularProductButton1)
                    .addComponent(popularCustomerTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salesCustomerJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(salesPersonComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calcCommissionBtn)
                    .addComponent(commissionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void top3SalesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top3SalesButtonActionPerformed
        // TODO add your handling code here:
        
        ArrayList<SalesPerson> salesPersonList = salesPersonDirectory.getGoodSalesPerson();
        
        
            DefaultTableModel dtm = (DefaultTableModel) salesPersonTable.getModel();
            dtm.setRowCount(0); 
        
            int count = salesPersonList.size();
          for(int i = 0 ; i<3 ; i++){  
       //for(SalesPerson SPafterSorting:salesPersonList){
            Object[] row = new Object[2];
            row[0]=salesPersonList.get(i).getSalesPersonName();
            row[1]=salesPersonList.get(i).getTotalAmount();
            
            dtm.addRow(row);
           }
        
        
    }//GEN-LAST:event_top3SalesButtonActionPerformed

    private void getPopularProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getPopularProductButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Supplier> supplierList = supplierDirectory.getSupplierList();
        for(Supplier s : supplierList){
            ProductCatalog productCatalog = s.getProductCatalog();
              Product p =  productCatalog.getPopularProduct();
              popularProductJTextField.setText(p.getProductName());
              salesVolumeJTextField.setText(String.valueOf((p.getProductSellCount())));
              break;
            
        }
        
    }//GEN-LAST:event_getPopularProductButtonActionPerformed

    private void getProductsBelowTargetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getProductsBelowTargetBtnActionPerformed
        // TODO add your handling code here:
        HashMap<String, Integer> hmap = salesPersonDirectory.getProductSoldBelowTarget();
        DefaultTableModel dtm = (DefaultTableModel) salesPersonBelowTargeTable.getModel();
            dtm.setRowCount(0); 
        
        
        /* Display content using Iterator*/
      Set set = hmap.entrySet();
      Iterator iterator = set.iterator();
      while(iterator.hasNext()) {
         Map.Entry mentry = (Map.Entry)iterator.next();
         Object[] row = new Object[2];
            row[0]=mentry.getKey();
            row[1]=mentry.getValue();
            
            dtm.addRow(row);
              }
    }//GEN-LAST:event_getProductsBelowTargetBtnActionPerformed

    private void getProductsAboveTargetBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getProductsAboveTargetBtn1ActionPerformed
        // TODO add your handling code here:
        
        HashMap<String, Integer> hmap = salesPersonDirectory.getProductSoldAboveTarget();
        DefaultTableModel dtm = (DefaultTableModel) salesPersonBelowTargeTable.getModel();
            dtm.setRowCount(0); 
        
        
        /* Display content using Iterator*/
      Set set = hmap.entrySet();
      Iterator iterator = set.iterator();
      while(iterator.hasNext()) {
         Map.Entry mentry = (Map.Entry)iterator.next();
         Object[] row = new Object[3];
            row[0]=mentry.getKey();
            row[2]=mentry.getValue();
            
            dtm.addRow(row);
              }
    }//GEN-LAST:event_getProductsAboveTargetBtn1ActionPerformed

    private void getPopularProductButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getPopularProductButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList<Customer> customerList = customerDirectory.getCustomerList();
        for(Customer c : customerList){
             c = customerDirectory.getPopularCustomer();
              popularCustomerTextField1.setText(c.getCustomerName());
              salesCustomerJTextField1.setText(String.valueOf((c.getTotalAmount())));
              break;
            
        }
    }//GEN-LAST:event_getPopularProductButton1ActionPerformed

    private void calcCommissionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcCommissionBtnActionPerformed
        // TODO add your handling code here:
        SalesPerson selectedSalesPerson = (SalesPerson) salesPersonComboBox.getSelectedItem();
        int orderitemCommission = 0;
        int oldComm =0;
        
        for(Order o : selectedSalesPerson.getMasterOrderCatalog().getOrderCatalog()){
            for(OrderItem oi : o.getOrderItemList()){
                 oldComm = oi.getCommission();
                orderitemCommission = orderitemCommission + oldComm;
                commissionTextField.setText(String.valueOf(orderitemCommission));
            }
            oldComm = orderitemCommission;
        }
    }//GEN-LAST:event_calcCommissionBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calcCommissionBtn;
    private javax.swing.JTextField commissionTextField;
    private javax.swing.JButton getPopularProductButton;
    private javax.swing.JButton getPopularProductButton1;
    private javax.swing.JButton getProductsAboveTargetBtn1;
    private javax.swing.JButton getProductsBelowTargetBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField popularCustomerTextField1;
    private javax.swing.JTextField popularProductJTextField;
    private javax.swing.JTextField salesCustomerJTextField1;
    private javax.swing.JTable salesPersonBelowTargeTable;
    private javax.swing.JComboBox salesPersonComboBox;
    private javax.swing.JTable salesPersonTable;
    private javax.swing.JTextField salesVolumeJTextField;
    private javax.swing.JButton top3SalesButton;
    // End of variables declaration//GEN-END:variables
}
